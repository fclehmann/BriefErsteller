#!/usr/bin/perl

use strict;
use warnings;
use Data::Dumper;
use Term::ANSIColor;
use UI::Dialog;
use File::Copy;

my $name_and_version;
my $d;

BEGIN {
	$name_and_version = "Briefersteller v. 4.22";

	$d = new UI::Dialog(
		backtitle => '',
		title => $name_and_version,
		height => 20,
		width => 65,
		listheight => 5,
		order => ['whiptail', 'xdialog', 'dialog', 'zenity', 'gdialog', 'ascii']
	);
}

sub code ($) {
	my $var = shift;
	print color("on_green black").$var.color("reset")."\n";
}

sub msg ($) {
	my $var = shift;
	print color("yellow").$var.color("reset")."\n";
}

sub error ($) {
	my $var = shift;
	print color("red").$var.color("reset")."\n";
}

sub ok ($) {
	my $var = shift;
	print color("green").$var.color("reset")."\n";
}


sub yesno ($) {
	my $text = shift;
	msg $text;
	my $res = $d->yesno( text => $text);
	msg "-> Antwort ".($res ? 'Ja' : 'Nein');
	return $res;
}

sub msgbox ($) {
	my $text = shift;
	msg $text;
	$d->msgbox(text => $text);
}

my $require_file = $ENV{"HOME"}.'/.briefkoepfe.pl';
my %options = (
	edit => undef,
	compileandopen => 1,
	automove => 0,
	dontask => 0
);
analyze_args(@ARGV);

my %daten = (
);

if(-e $require_file) {
	eval `cat $require_file`;
}

main();

sub main {
	print <<EOF;
$name_and_version

Dieses Skript soll helfen, automatisiert Briefköpfe zu erstellen.

Einmal eingegebene Daten werden gespeichert und stehen bei späteren Aufrufen zur Verfügung.
Die Daten werden in der Datei
	$require_file
gespeichert und sind menschenlesbar und direkt in dieser Datei editierbar.

EOF
	my ($name, %this_daten) = get_daten("Empfaenger");

	if(-e $require_file) {
		eval `cat $require_file`;
	}

	my ($sender_name, %sender_daten) = get_daten("Sender");

	my $betreff = '';
	if($options{Betreff}) {
		$betreff = $options{Betreff};
	} else {
		$betreff = do_read("Betreff");
	}

	my $ihrzeichen = '';
	my $meinzeichen = '';
	my $ihrschreiben = '';

	if($options{IhrZeichen}) {
		$ihrzeichen = $options{IhrZeichen};
	} else {
		my $ihrzeichen_default = find_IhrZeichen();
		$ihrzeichen = do_read("Ihr Zeichen", $ihrzeichen_default);
		if($ihrzeichen) {
			$ihrzeichen_default = $ihrzeichen;
			if($options{MeinZeichen}) {
				$meinzeichen = $options{MeinZeichen};
			} else {
				$meinzeichen = do_read("Mein Zeichen", $ihrzeichen_default);
				if(!$meinzeichen) {
					$meinzeichen = '---';
				}
			}

			if($options{IhrSchreiben}) {
				$ihrschreiben = $options{IhrSchreiben};
			} else {
				$ihrschreiben = do_read("Ihr Schreiben (Datum)");
				if(!$ihrschreiben) {
					$ihrschreiben = '---';
				}
			}
		}
	}

	my $postvermerk = '';
	if($options{Postvermerk}) {
		$postvermerk = $options{Postvermerk};
	} else {
		$postvermerk = do_read("Postvermerk (z.B. Einschreiben, Drucksache usw.)");
	}

	my $dateiname = '';
	my $j = 0;
	while ($dateiname eq '') {
		if($j == 0 && $options{Dateiname}) {
			$dateiname = $options{Dateiname};
		} else {
			while (!$dateiname) {
				$dateiname = do_read("Dateiname (.tex wird automatisch hinzugefügt)");
			}
		}

		$dateiname =~ s#\.tex$##g;
		$dateiname .= '.tex';

		if(-e $dateiname) {
			if ($options{automove} || yesno("'$dateiname' existiert bereits. Alte Datei verschieben?")) {
				my $i = 1;
				while (-e "$dateiname.$i") {
					$i++;
				}
				move($dateiname, "$dateiname.$i");
				if(!$options{automove}) {
					msgbox "Die alte Datei '$dateiname' wurde nach '$dateiname.$i' verschoben";
				}
			} else {
				$dateiname = '';
			}
		}
		$j++;
	}

	my $tmp_file = '/tmp/letter_tmp_'.rand().".tex";
	while (-e $tmp_file) {
		$tmp_file = '/tmp/letter_tmp_'.rand().".tex";
	}

	system("$ENV{EDITOR} $tmp_file");
	my $letter_main_text = read_file_chomp($tmp_file);
	unlink $tmp_file;

	if($dateiname ne '.tex') {
		create_letter(
			postvermerk => $postvermerk,
			betreff => $betreff,
			ihrzeichen => $ihrzeichen,
			ihrschreiben => $ihrschreiben,
			meinzeichen => $meinzeichen,
			dateiname => $dateiname,
			empfaenger_daten => \%this_daten,
			sender_daten => \%sender_daten,
			name => $name,
			sender_name => $sender_name,
			letter_main_text => $letter_main_text
		);

		my $filename_without_tex = $dateiname;
		$filename_without_tex =~ s#\.tex$##g;
		my $compile_and_run = "latexmk -pdf $dateiname && xdg-open $filename_without_tex.pdf";

		my @whattodo = ();
		if($options{dontask}) {
			if($options{edit}) {
				push @whattodo, $ENV{EDITOR};
			}

			if($options{compileandopen}) {
				push @whattodo, 'compileandopen';
			}
		} else {
			push @whattodo, $d->checklist(
				text => 'Was soll ich noch tun?',
				list => [
					$ENV{EDITOR}, [ "Ganzen Brief nochmal in $ENV{EDITOR} oeffnen", !!$options{edit} ],
					'compileandopen', [ 'Brief kompilieren und öffnen', !!$options{compileandopen} ]
				]
			);
		}

		if (grep($ENV{EDITOR} eq $_, @whattodo)) {
			system("$ENV{EDITOR} $dateiname")
		}

		if (grep('compileandopen' eq $_, @whattodo)) {
			system($compile_and_run);
		}

		code $compile_and_run;
	}
}

sub get_daten {
	my $title = shift;
	my $name = '';
	if($options{$title}) {
		$name = $options{$title};
	} else {
		my $default_name = undef;
		if($title eq "Sender") {
			my $default_name_file = $ENV{"HOME"}.'/.defaultnamebrief';
			if(-e $default_name_file) {
				ok "Die Datei $default_name_file existiert. Sie wird genommen, um den Default-Namen des Senders zu bestimmen";
				$default_name = read_file_chomp($default_name_file);
				msg "Der Default-Sender-Name ist '$default_name'";
			} else {
				msg "Die Datei $default_name_file existiert nicht. Sie wird genommen, um den Default-Namen des Senders zu bestimmen";
			}
		}
		$name = do_read($title, $default_name);
	}

	my %this_daten = ();

	if(exists($daten{$name})) {
		%this_daten = %{$daten{$name}};
	} else {
		my @fields = qw/firma strasse plz stadt email telefon anrede gruesse/;
		for (@fields) {
			my $data = do_read(ucfirst($_));
			$this_daten{$_} = $data if defined $data;
		}

		msg "Die Daten waren dem Skript nicht bekannt. Sie werden nun in die ~/.briefkoepfe.pl geschrieben und stehen bei späteren Aufrufen zur Verfügung.";

		my $dumper = Dumper \%this_daten;

		my $name_dumper = $name;
		$name_dumper =~ s#"#\\"#g;
		$dumper =~ s#^\$VAR1 = #\$daten{"$name_dumper"} = #;

		open my $fh, '>>', $require_file or die $!;
		print $fh $dumper;
		close $fh;
	}

	return ($name, %this_daten);
}

sub do_read {
	my $name = shift;
	my $default = shift // '';
	msg $name.($default ? ", default_entry: $default" : '');
	my $str = $d->inputbox(
		text => "$name: ",
		entry => $default
	);

	if ($d->state() eq "OK") {
		msg "-> $str";
		chomp $str;
		return $str;
	} else {
		error "Error: ".$d->state();
		exit(1);
	}
}

sub create_letter {
	my %par = @_;

	my $letter = <<EOF
\\documentclass{g-brief2}
\\usepackage{ngerman}
\\usepackage[utf8x]{inputenc}
\\usepackage[T1]{fontenc}
\\usepackage{fourier}
\\usepackage{marvosym}

EOF
	;

	my $letter_main_text = "% Hier kommt der eigentliche Brief hin";
	if($par{letter_main_text}) {
		$letter_main_text = $par{letter_main_text};
	}

	my %sender_daten = %{$par{sender_daten}};
	my %empfaenger_daten = %{$par{empfaenger_daten}};

	my $empfaenger_adresse = $par{name};
	if(exists($empfaenger_daten{firma}) && $par{name} ne $empfaenger_daten{firma}) {
		$empfaenger_adresse .= "\\\\$empfaenger_daten{firma}";
	}

	if(exists($empfaenger_daten{strasse})) {
		$empfaenger_adresse .= "\\\\$empfaenger_daten{strasse}";
	}

	if(exists($empfaenger_daten{plz}) && exists($empfaenger_daten{stadt})) {
		$empfaenger_adresse .= "\\\\$empfaenger_daten{plz} $empfaenger_daten{stadt}";
	}

	$empfaenger_adresse =~ s#(?:\\\\){2,}#\\\\#;
	$empfaenger_adresse =~ s#(?:\\\s*){1,}$##g;

	foreach my $anrede_gruesse (qw/anrede gruesse/) {
		if(exists($empfaenger_daten{$anrede_gruesse}) && $empfaenger_daten{$anrede_gruesse} !~ m#!$#) {
			$empfaenger_daten{$anrede_gruesse} =~ s#\s*,*$##g;
			$empfaenger_daten{$anrede_gruesse} .= ",";
		}
	}

	if($empfaenger_adresse) {
		add_to_letter(\$letter, "Adresse", $empfaenger_adresse);
	} else {
		error "Keine Empfaenger-Adresse eingegeben!";
	}

	if($empfaenger_daten{gruesse}) {
		add_to_letter(\$letter, "Gruss", $empfaenger_daten{gruesse}, "{0cm}");
	}

	if($empfaenger_daten{anrede}) {
		add_to_letter(\$letter, "Anrede", $empfaenger_daten{anrede});
	}

	if($par{betreff}) {
		add_to_letter(\$letter, "Betreff", $par{betreff});
	}

	if($par{sender_name}) {
		add_to_letter(\$letter, "AdressZeileA", $par{sender_name});
	}

	if($sender_daten{strasse}) {
		add_to_letter(\$letter, "AdressZeileB", $sender_daten{strasse});
	}

	if($sender_daten{plz} && $sender_daten{stadt}) {
		add_to_letter(\$letter, "AdressZeileC", $sender_daten{plz}.' '.$sender_daten{stadt});
	} elsif ($sender_daten{plz} && !$sender_daten{stadt}) {
		add_to_letter(\$letter, "AdressZeileC", $sender_daten{plz});
	} elsif (!$sender_daten{plz} && $sender_daten{stadt}) {
		add_to_letter(\$letter, "AdressZeileC", $sender_daten{stadt});
	}

	if($par{sender_name} || $sender_daten{strasse} || $sender_daten{plz} || $sender_daten{stadt}) {
		my $retour_adress = '';
		if($par{sender_name}) {
			$retour_adress .= $par{sender_name};
		}

		if($sender_daten{strasse}) {
			if($retour_adress) {
				$retour_adress .= ", ";
			}
			$retour_adress .= $sender_daten{strasse};
		}

		if($sender_daten{plz} && $sender_daten{stadt}) {
			if($retour_adress) {
				$retour_adress .= ", ";
			}
			$retour_adress .= $sender_daten{plz}.' '.$sender_daten{stadt};
		} elsif ($sender_daten{plz} && !$sender_daten{stadt}) {
			if($retour_adress) {
				$retour_adress .= ", ";
			}
			$retour_adress .= $sender_daten{plz};
		} elsif (!$sender_daten{plz} && $sender_daten{stadt}) {
			if($retour_adress) {
				$retour_adress .= ", ";
			}
			$retour_adress .= $sender_daten{stadt};
		}

		add_to_letter(\$letter, "RetourAdresse", $retour_adress);
	}

	if($par{postvermerk}) {
		add_to_letter(\$letter, "Postvermerk", $par{postvermerk});
	}

	if($par{ihrschreiben}) {
		add_to_letter(\$letter, "IhrSchreiben", $par{ihrschreiben});
	}

	if($par{meinzeichen}) {
		add_to_letter(\$letter, "MeinZeichen", $par{meinzeichen});
	}

	if($par{ihrzeichen}) {
		add_to_letter(\$letter, "IhrZeichen", $par{ihrzeichen});
	}

	if($par{sender_name}) {
		add_to_letter(\$letter, "Name", $par{sender_name});
	}

	if($par{sender_name}) {
		add_to_letter(\$letter, "Unterschrift", $par{sender_name});
	}


	if(exists($sender_daten{email})) {
		add_to_letter(\$letter, "InternetZeileA", $sender_daten{email});
	}


	my $adress_zeile = 'A';
	if(exists($sender_daten{telefon})) {
		add_to_letter(\$letter, "TelefonZeile$adress_zeile", "\\Telefon{".phone_number($sender_daten{telefon})."}");
		$adress_zeile++;
	}


	my @whattoadd = ();
	if($options{dontask}) {
		push @whattoadd, qw/trennlinien lochermarke faltmarken fenstermarken/;
	} else {
		push @whattoadd, $d->checklist(
			text => 'Was soll dem Brief hinzufuegen?',
			list => [
				trennlinien => [ "Trennlinien hinzufuegen" => 1 ],
				lochermarke => [ "Lochermarken hinzufuegen" => 0 ],
				faltmarken => [ "Faltmarken hinzufuegen" => 0 ],
				fenstermarken => [ "Fenstermarken hinzufuegen" => 1 ]
			]
		);
	}

	foreach my $add (@whattoadd) {
		$letter .= '\\'.$add."\n";
	}

	$letter .= <<EOF
\\addtolength{\\topmargin}{0.95cm}

\\begin{document}
\\begin{g-brief}

$letter_main_text

\\end{g-brief}
\\end{document}
EOF
;

	open my $fh, '>', $par{dateiname} or die $!;
	print $fh $letter;
	close $fh or die $!;

	ok "Brief '".$par{dateiname}."' erfolgreich erzeugt.";
}

sub add_to_letter {
	my $letter = shift;
	my $command_name = shift;
	my $value = shift // '';
	my $after_command = shift;

	no warnings;
	${$letter} .= "\\$command_name\{$value\}$after_command\n";
	use warnings;
}

sub _help {
	my $error = shift // 0;
	print <<EOF;
$name_and_version

--help                                  Diese Hilfe
--Empfaenger="Name"                     Empfängernamen
--Sender="Name"                         Sendername
--Betreff="Betreff"                     Betreff
--Dateiname="filename"                  Dateiname ohne .tex
--edit					Startet nach Erstellung automatisch $ENV{EDITOR}
--noedit				Startet keinen Editor und fragt auch nicht danach
--compileandopen			Startet direkt einen Kompilierungsvorgang und öffnet die entstandene PDF
--nocompileandopen			Startet keinen Kompilierungsvorgang und fragt auch nicht danach
--automove				Automatisches Verschieben ohne Nachfrage
--dontask				Frage nicht was noch zu tun ist, sondern handle laut Defaults/Parametern
EOF
	;
	exit($error);
}

sub analyze_args {
	foreach (@_) {
		if(m#^--help$#i) {
			_help();
		} elsif(m#^--dateiname=(.*)$#i) {
			$options{Dateiname} = $1;
		} elsif(m#^--empfaenger=(.*)$#i) {
			$options{Empfaenger} = $1;
		} elsif(m#^--sender=(.*)$#i) {
			$options{Sender} = $1;
		} elsif(m#^--MeinZeichen=(.*)$#i) {
			$options{MeinZeichen} = $1;
		} elsif(m#^--IhrZeichen=(.*)$#i) {
			$options{IhrZeichen} = $1;
		} elsif(m#^--IhrSchreiben=(.*)$#i) {
			$options{IhrSchreiben} = $1;
		} elsif(m#^--betreff=(.*)$#i) {
			$options{Betreff} = $1;
		} elsif(m#^--postvermerk=(.*)$#i) {
			$options{Postvermerk} = $1;
		} elsif(m#^--noedit#i) {
			$options{edit} = 0;
		} elsif(m#^--edit#i) {
			$options{edit} = 1;
		} elsif(m#^--compileandopen#i) {
			$options{compileandopen} = 1;
		} elsif(m#^--nocompileandopen#i) {
			$options{compileandopen} = 0;
		} elsif(m#^--automove#i) {
			$options{automove} = 1;
		} elsif(m#^--dontask#i) {
			$options{dontask} = 1;
		} else {
			error "Unknown parameter $_";
			_help(1);
		}
	}
}

sub read_file_chomp {
	my $filename = shift;
	my $content = read_file($filename);
	chomp $content;
	return $content;
}

sub read_file {
	my $filename = shift;
	if (-e $filename) {
		my $content = '';
		open my $fh, '<', $filename;
		while (<$fh>) {
			$content .= $_;
		}
		close $fh;
		return $content;
	} else {
		error "Die Datei $filename existiert nicht";
		return '';
	}
}

sub phone_number {
	my $nr = shift;
	$nr = reverse $nr;
	$nr =~ s#(\d{2})#$1,\\#g;
	$nr = reverse $nr;
	$nr =~ s#^\\,##g;
	$nr =~ s#\\,$##g;
	return $nr;
}

sub find_IhrZeichen {
	while (my $file = <*.tex>) {
		my $content = read_file_chomp($file);
		if($content =~ m#^\s*\\IhrZeichen\{([^\}]+)\}\s*$#) {
			return $1;
		}
	}
	return '';
}
